(()=>{"use strict";var n={294:(n,e,t)=>{t.d(e,{Z:()=>C});var o=t(537),r=t.n(o),a=t(645),i=t.n(a),A=t(667),c=t.n(A),s=new URL(t(898),t.b),l=new URL(t(432),t.b),d=new URL(t(508),t.b),u=i()(r()),p=c()(s),f=c()(l),m=c()(d);u.push([n.id,"/* lato-latin-ext-400-normal*/\n@font-face {\n  font-family: 'Lato';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url("+p+") format('woff2'), url("+f+") format('woff');\n  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n/* lato-latin-400-normal*/\n@font-face {\n  font-family: 'Lato';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url("+m+") format('woff2'), url("+f+") format('woff');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\n","",{version:3,sources:["webpack://./node_modules/@fontsource/lato/index.css"],names:[],mappings:"AAAA,6BAA6B;AAC7B;EACE,mBAAmB;EACnB,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,oHAA2H;EAC3H,mHAAmH;AACrH;AACA,yBAAyB;AACzB;EACE,mBAAmB;EACnB,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,oHAAuH;EACvH,yKAAyK;AAC3K",sourcesContent:["/* lato-latin-ext-400-normal*/\n@font-face {\n  font-family: 'Lato';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url('./files/lato-latin-ext-400-normal.woff2') format('woff2'), url('./files/lato-all-400-normal.woff') format('woff');\n  unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n}\n/* lato-latin-400-normal*/\n@font-face {\n  font-family: 'Lato';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src: url('./files/lato-latin-400-normal.woff2') format('woff2'), url('./files/lato-all-400-normal.woff') format('woff');\n  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n}\n"],sourceRoot:""}]);const C=u},426:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,'body {\n    background-color: rgb(255, 255, 223);\n    color: rgb(92, 92, 92);\n    font-family: "Lato";\n}\n\nh2 {\n    margin-bottom: 0;\n    padding: 0;\n}\n\n.sidebar {\n    font-size: 1.5em;\n}\n\n.container {\n    display: flex;\n    justify-content: center;\n    align-items: flex-start;\n    gap: 60px;\n}\n\n.tasks-container {\n    background: white;\n    margin-top: 60px;\n    width: 50vw;\n    padding: 30px;\n    border-radius: 2em;\n    box-shadow: 0 0 80px 10px rgb(253, 239, 178);\n}\n\n#project-name {\n    font-size: 1.2em;\n    font-weight: bold;\n}\n\nbutton {\n    cursor: pointer;\n    border: 0;\n    padding: 0;\n    background: transparent; \n    opacity: 0.5;\n    font-family: "Lato";\n    transition: opacity 200ms ease-in;\n}\n\nbutton:hover {\n    opacity: 1;\n}\n\n.projects-container ul:hover{\n    cursor: pointer;\n    transition: opacity 200ms ease-in;\n    opacity: 1;\n}\n\n.current-project  {\n    font-weight: bolder;\n    opacity: 1;\n}\n\nul {\n    border: 0;\n    margin: 0;\n    padding: 0.4em;\n    opacity: 0.5;\n}\n\nul:first-letter, td:first-letter {\n    text-transform: capitalize;\n}\n\ninput, select {\n    background: transparent;\n    border: 0;\n    font-family: "Lato";\n    opacity: 0.5;\n}\n\ninput:focus, input:hover, select:focus, select:hover, textarea:hover {\n    transition: 300ms ease-in;\n    opacity: 1;\n}\n\nth {\n    font-size: 0.7em;\n    opacity: 0.5;\n    text-align: left;\n}\n\ntable {\n    border-collapse: separate; \n    border-spacing: 0 1em;\n    table-layout:fixed;\n}\n\n.delete {\n    margin-top: 60px;\n    font-size: 1em;\n    margin-left: -40px;\n}\n\ni {\n    opacity: 0.3;\n}\n\ntd {\n    overflow: auto;\n}\n\n.modal {\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    pointer-events: none;\n    opacity: 0;\n    will-change: transform, opacity;\n    transform: scale(1.15);\n    transition:\n      transform 0.1s cubic-bezier(0.465, 0.183, 0.153, 0.946),\n      opacity 0.1s cubic-bezier(0.465, 0.183, 0.153, 0.946);\n}\n\n.modal.visible {\n    pointer-events: auto;\n    opacity: 1;\n    transform: scale(1);\n    transition:\n      transform 0.3s cubic-bezier(0.465, 0.183, 0.153, 0.946),\n      opacity 0.3s cubic-bezier(0.465, 0.183, 0.153, 0.946);\n}\n\n.modal-content {\n    position: absolute;\n    display: flex;\n    flex-direction: column;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background-color: white;\n    padding: 1rem 1.5rem;\n    width: 30rem;\n    height: auto;\n    border-radius: 0.5rem;\n    overflow: auto;\n}\n\n.modal-data {\n    display: flex;\n    justify-content: space-between;\n    padding-bottom: 0.5em;\n}\n\n.edit-title {\n    width: 50%;\n}\n\n.notes {\n    height: 50%;\n    width: 99%;\n    font-family: "Lato";\n    border: transparent;\n    margin-bottom: 0.5em;\n    opacity: 0.5;\n}\n\n.save-btn {\n    padding: 0.3em;\n    background-color:rgb(92, 92, 92);\n    color: white;\n    border-radius: 0.5em;\n}\n\n.btns {\n    display: flex;\n    justify-content: center;\n    gap: 10px;\n    opacity: 0.8;\n}\n\n#sort-priority:hover, #sort-duedate:hover {\n    cursor: pointer;\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,oCAAoC;IACpC,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;IAChB,UAAU;AACd;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,uBAAuB;IACvB,SAAS;AACb;;AAEA;IACI,iBAAiB;IACjB,gBAAgB;IAChB,WAAW;IACX,aAAa;IACb,kBAAkB;IAClB,4CAA4C;AAChD;;AAEA;IACI,gBAAgB;IAChB,iBAAiB;AACrB;;AAEA;IACI,eAAe;IACf,SAAS;IACT,UAAU;IACV,uBAAuB;IACvB,YAAY;IACZ,mBAAmB;IACnB,iCAAiC;AACrC;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,eAAe;IACf,iCAAiC;IACjC,UAAU;AACd;;AAEA;IACI,mBAAmB;IACnB,UAAU;AACd;;AAEA;IACI,SAAS;IACT,SAAS;IACT,cAAc;IACd,YAAY;AAChB;;AAEA;IACI,0BAA0B;AAC9B;;AAEA;IACI,uBAAuB;IACvB,SAAS;IACT,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,yBAAyB;IACzB,UAAU;AACd;;AAEA;IACI,gBAAgB;IAChB,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,yBAAyB;IACzB,qBAAqB;IACrB,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;IAChB,cAAc;IACd,kBAAkB;AACtB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,eAAe;IACf,OAAO;IACP,MAAM;IACN,WAAW;IACX,YAAY;IACZ,oCAAoC;IACpC,oBAAoB;IACpB,UAAU;IACV,+BAA+B;IAC/B,sBAAsB;IACtB;;2DAEuD;AAC3D;;AAEA;IACI,oBAAoB;IACpB,UAAU;IACV,mBAAmB;IACnB;;2DAEuD;AAC3D;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,QAAQ;IACR,SAAS;IACT,gCAAgC;IAChC,uBAAuB;IACvB,oBAAoB;IACpB,YAAY;IACZ,YAAY;IACZ,qBAAqB;IACrB,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,qBAAqB;AACzB;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,WAAW;IACX,UAAU;IACV,mBAAmB;IACnB,mBAAmB;IACnB,oBAAoB;IACpB,YAAY;AAChB;;AAEA;IACI,cAAc;IACd,gCAAgC;IAChC,YAAY;IACZ,oBAAoB;AACxB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,SAAS;IACT,YAAY;AAChB;;AAEA;IACI,eAAe;AACnB",sourcesContent:['body {\n    background-color: rgb(255, 255, 223);\n    color: rgb(92, 92, 92);\n    font-family: "Lato";\n}\n\nh2 {\n    margin-bottom: 0;\n    padding: 0;\n}\n\n.sidebar {\n    font-size: 1.5em;\n}\n\n.container {\n    display: flex;\n    justify-content: center;\n    align-items: flex-start;\n    gap: 60px;\n}\n\n.tasks-container {\n    background: white;\n    margin-top: 60px;\n    width: 50vw;\n    padding: 30px;\n    border-radius: 2em;\n    box-shadow: 0 0 80px 10px rgb(253, 239, 178);\n}\n\n#project-name {\n    font-size: 1.2em;\n    font-weight: bold;\n}\n\nbutton {\n    cursor: pointer;\n    border: 0;\n    padding: 0;\n    background: transparent; \n    opacity: 0.5;\n    font-family: "Lato";\n    transition: opacity 200ms ease-in;\n}\n\nbutton:hover {\n    opacity: 1;\n}\n\n.projects-container ul:hover{\n    cursor: pointer;\n    transition: opacity 200ms ease-in;\n    opacity: 1;\n}\n\n.current-project  {\n    font-weight: bolder;\n    opacity: 1;\n}\n\nul {\n    border: 0;\n    margin: 0;\n    padding: 0.4em;\n    opacity: 0.5;\n}\n\nul:first-letter, td:first-letter {\n    text-transform: capitalize;\n}\n\ninput, select {\n    background: transparent;\n    border: 0;\n    font-family: "Lato";\n    opacity: 0.5;\n}\n\ninput:focus, input:hover, select:focus, select:hover, textarea:hover {\n    transition: 300ms ease-in;\n    opacity: 1;\n}\n\nth {\n    font-size: 0.7em;\n    opacity: 0.5;\n    text-align: left;\n}\n\ntable {\n    border-collapse: separate; \n    border-spacing: 0 1em;\n    table-layout:fixed;\n}\n\n.delete {\n    margin-top: 60px;\n    font-size: 1em;\n    margin-left: -40px;\n}\n\ni {\n    opacity: 0.3;\n}\n\ntd {\n    overflow: auto;\n}\n\n.modal {\n    position: fixed;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    pointer-events: none;\n    opacity: 0;\n    will-change: transform, opacity;\n    transform: scale(1.15);\n    transition:\n      transform 0.1s cubic-bezier(0.465, 0.183, 0.153, 0.946),\n      opacity 0.1s cubic-bezier(0.465, 0.183, 0.153, 0.946);\n}\n\n.modal.visible {\n    pointer-events: auto;\n    opacity: 1;\n    transform: scale(1);\n    transition:\n      transform 0.3s cubic-bezier(0.465, 0.183, 0.153, 0.946),\n      opacity 0.3s cubic-bezier(0.465, 0.183, 0.153, 0.946);\n}\n\n.modal-content {\n    position: absolute;\n    display: flex;\n    flex-direction: column;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background-color: white;\n    padding: 1rem 1.5rem;\n    width: 30rem;\n    height: auto;\n    border-radius: 0.5rem;\n    overflow: auto;\n}\n\n.modal-data {\n    display: flex;\n    justify-content: space-between;\n    padding-bottom: 0.5em;\n}\n\n.edit-title {\n    width: 50%;\n}\n\n.notes {\n    height: 50%;\n    width: 99%;\n    font-family: "Lato";\n    border: transparent;\n    margin-bottom: 0.5em;\n    opacity: 0.5;\n}\n\n.save-btn {\n    padding: 0.3em;\n    background-color:rgb(92, 92, 92);\n    color: white;\n    border-radius: 0.5em;\n}\n\n.btns {\n    display: flex;\n    justify-content: center;\n    gap: 10px;\n    opacity: 0.8;\n}\n\n#sort-priority:hover, #sort-duedate:hover {\n    cursor: pointer;\n}'],sourceRoot:""}]);const A=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(i[c]=!0)}for(var s=0;s<n.length;s++){var l=[].concat(n[s]);o&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],A=0;A<n.length;A++){var c=n[A],s=o.base?c[0]+o.base:c[0],l=a[s]||0,d="".concat(s," ").concat(l);a[s]=l+1;var u=t(d),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var f=r(p,o);o.byIndex=A,e.splice(A,0,{identifier:d,updater:f,references:1})}i.push(d)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);e[A].references--}for(var c=o(n,r),s=0;s<a.length;s++){var l=t(a[s]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},432:(n,e,t)=>{n.exports=t.p+"61e9afcb9c512591b370.woff"},508:(n,e,t)=>{n.exports=t.p+"65e877e527022735c1a1.woff2"},898:(n,e,t)=>{n.exports=t.p+"b267ec5ad7d86fe2e606.woff2"}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href;var o={};(()=>{t.d(o,{$L:()=>N,vr:()=>T,q:()=>D});var n=t(379),e=t.n(n),r=t(795),a=t.n(r),i=t(569),A=t.n(i),c=t(565),s=t.n(c),l=t(216),d=t.n(l),u=t(589),p=t.n(u),f=t(426),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=A().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=d(),e()(f.Z,m),f.Z&&f.Z.locals&&f.Z.locals;var C=t(294),y={};y.styleTagTransform=p(),y.setAttributes=s(),y.insert=A().bind(null,"head"),y.domAPI=a(),y.insertStyleElement=d(),e()(C.Z,y),C.Z&&C.Z.locals&&C.Z.locals;const B=document.querySelector("#project-name"),b=document.querySelector(".tasks-container"),g=document.querySelector(".delete-project-btn");const h=document.querySelector(".task-template"),v=document.querySelector(".task-table"),I=document.querySelector(".projects-container"),w=document.querySelector("#project-name"),x=document.querySelector(".tasks-container"),U=document.querySelector(".delete-project-btn");function E(){S(I),D.forEach((n=>{const e=document.createElement("ul");e.textContent=n.name,I.appendChild(e)}))}function k(n){S(v),w.textContent=n.name,n.tasks.forEach((n=>{const e=document.importNode(h.content,!0),t=e.querySelector("#title"),o=e.querySelector("#priority"),r=e.querySelector("#duedate");t.textContent=n.title,o.textContent=n.priority,r.textContent=n.duedate,v.appendChild(e)})),document.querySelectorAll("#edit-task-btn").forEach((n=>{n.addEventListener("click",(n=>{!function(n){const e=document.querySelector(".modal");e.classList.add("visible");const t=n.target.parentNode.parentNode.parentNode.childNodes[1],o=D.find((n=>n.name===B.textContent));let r=o.tasks.find((n=>n.title===t.textContent));const a=document.querySelector(".edit-title"),i=document.querySelector(".edit-priority"),A=document.querySelector(".edit-due-date"),c=document.querySelector(".notes");a.value=r.title,i.value=r.priority,A.value=r.duedate,c.value=r.notes,document.querySelector(".save-btn").addEventListener("click",(n=>{r.title=a.value,r.priority=i.value,r.duedate=A.value,r.notes=c.value,e.classList.remove("visible"),k(o)}),{once:!0})}(n)}))})),document.querySelectorAll("#delete-task-btn").forEach((n=>{n.addEventListener("click",(n=>{!function(n){const e=n.target.parentNode.parentNode.parentNode.childNodes[1],t=D.find((n=>n.name===B.textContent)),o=t.tasks.find((n=>n.title===e.textContent));t.tasks.splice(t.tasks.indexOf(o),1),n.target.parentNode.parentNode.parentNode.remove()}(n)}))}))}function S(n){for(;n.firstChild;)n.removeChild(n.firstChild)}const q=document.querySelector(".add-new-project"),L=document.querySelector(".add-new-task"),j=document.querySelector(".delete-project-btn"),F=document.querySelector(".projects-container"),Y=document.querySelector("#sort-priority"),z=document.querySelector("#sort-duedate");function N(n){return{name:n,tasks:[]}}function T(n,e,t){return{title:n,priority:e,duedate:t,notes:""}}q.addEventListener("submit",(n=>function(n){n.preventDefault();const e=document.querySelector(".project-name"),t=e.value;if(null==t||""==t)return;if(null!=D.find((n=>n.name.toLowerCase()==t.toLowerCase())))return void alert(`You already have a project named ${t}`);const o=N(t);D.push(o),E(),e.value=null}(n))),L.addEventListener("submit",(n=>function(n){n.preventDefault();const e=document.querySelector(".title").value,t=document.querySelector(".priority").value,o=document.querySelector(".due-date").value;if(null==e||""==e)return;const r=T(e,t,o),a=D.find((n=>n.name===B.textContent));a.tasks.push(r),k(a),document.querySelector(".title").value=null,document.querySelector(".priority").selectedIndex=0,document.querySelector(".due-date").value=null}(n))),j.addEventListener("click",(n=>function(){if(confirm("Are you sure you want to delete this project?")){const n=D.find((n=>n.name===B.textContent));D.splice(D.indexOf(n),1),E(),b.style.visibility="hidden",g.style.visibility="hidden"}}())),F.addEventListener("click",(n=>function(n){if("UL"===n.target.tagName){const e=document.querySelector(".current-project");null!=e&&e.classList.remove("current-project"),n.target.classList.add("current-project"),k(D.find((e=>e.name===n.target.textContent))),x.style.visibility="visible",U.style.visibility="visible"}}(n))),Y.addEventListener("click",(n=>function(){const n=D.find((n=>n.name===B.textContent)),e=["High","Med","Low",""];n.tasks.sort(((n,t)=>e.indexOf(n.priority)-e.indexOf(t.priority))),k(n)}())),z.addEventListener("click",(n=>function(){const n=D.find((n=>n.name===B.textContent));n.tasks.sort(((n,e)=>n.duedate>e.duedate?1:-1)),k(n)}()));const D=[{name:"Misc",tasks:[{title:"Buy ingredients for cake",priority:"Low",duedate:"2022-12-23",notes:"Eggs, flour, milk, cocoa"},{title:"Schedule doctor's appointment",priority:"High",duedate:"2021-12-30",notes:""}]},{name:"Work",tasks:[{title:"Zoom meeting with HR",priority:"Low",duedate:"2021-12-29",notes:"review notes from last week's meeting"},{title:"Finish weekly sales report",priority:"High",duedate:"2021-12-20",notes:""},{title:"Coordinate lunch and learn",priority:"Med",duedate:"2021-12-24",notes:""}]},{name:"Gym",tasks:[{title:"Squat 225 lbs",priority:"Low",duedate:"2022-01-29",notes:""},{title:"Renew gym membership",priority:"Med",duedate:"2022-02-01",notes:""},{title:"Work on hip mobility",priority:"Med",duedate:"2021-12-24",notes:""}]}];E(),k(D[1]),document.querySelectorAll("ul")[1].classList.add("current-project")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,